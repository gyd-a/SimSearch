
syntax = "proto3";

package common_rpc;

message IvfPqParams {
    string                   metric_type = 1;
    int32                     ncentroids = 2;
    int32                     nsubvector = 3;
    optional HnswParams             hnsw = 4;
}

message HnswParams {
    int32                         nlinks = 1;
    int32                 efConstruction = 2;
    int32                       efSearch = 3;
}

message Index {
    string                          name = 1;
    string                          type = 2;
    optional string               params = 3;
}

message Field {
    string                               name = 1;
    string                               type = 2;
    optional uint32                 dimension = 3;
    optional Index                      index = 4;
}

// 也是ps创建Space的request
message Space {
    string                             db_name = 1;
    string                          space_name = 2;
    uint32                                  id = 3;
    uint32                       partition_num = 4;
    uint32                         replica_num = 5;
    repeated Field                      fields = 6;
    repeated Partition              partitions = 7;
    optional string                   _id_type = 8;   // "long", "string", ""

    optional string                    ctime = 101;
    optional string                    mtime = 102;
}


message Partition {
    int32                       partition_id = 1;
    string                        group_name = 2;
    repeated Replica                replicas = 3;
	optional string              create_time = 4;        // 2022-12-12 12:12:12+毫秒时间戳
	optional string              update_time = 5;        // 2022-12-12 12:12:12+毫秒时间戳
}

message Replica {
    int32                     ps_id = 1;
    string                    ps_ip = 2;
    int32                   ps_port = 3;
    optional int32        is_leader = 4;
    optional string     node_status = 5;
    optional string             msg = 6;
}

message RespStatus {
    optional int32                       code = 1;
    optional string                       msg = 2;
}

message StrArrayField {
  repeated string array = 1;
}

message VectorField {
  repeated float vector = 1;
}

message Document {
    optional string                      _id = 1;
    map<string, int32>                  ints = 2;
    map<string, int64>                 longs = 3;
    map<string, float>                floats = 4;
    map<string, double>              doubles = 5;
    map<string, string>              strings = 6;
    map<string, StrArrayField> string_arrays = 7;
    map<string, VectorField>         vectors = 8;
}

// -----------------【写】数据操作-----------------
message DocStatus {
    string                               _id = 1;
    int32                               code = 2;
    string                               msg = 3;
}

message UpsertRequest {
    string                           db_name = 1;
    string                        space_name = 2;
    optional string                 trace_id = 3;
    repeated common_rpc.Document   documents = 4;
}

message UpsertResponse {
    int32                                code = 1;
    string                                msg = 2;
    repeated common_rpc.DocStatus failed_docs = 3;
}

message DeleteRequest {
    string                           db_name = 1;
    string                        space_name = 2;
    optional string                 trace_id = 3;
    repeated string                     _ids = 4;
}

message DeleteResponse {
    int32                                code = 1;
    string                                msg = 2;
    repeated common_rpc.DocStatus failed_docs = 3;
}
// --------------------------------------


// -----------------【读】数据操作-----------------
message GetRequest {
    string                           db_name = 1;
    string                        space_name = 2;
    optional string                 trace_id = 3;
    repeated string                     _ids = 4;
}

message GetResponse {
    int32                                 code = 1;
    string                                 msg = 2;
    repeated common_rpc.Document     documents = 3;
    repeated common_rpc.DocStatus  failed_docs = 4;
}

message SearchRequest {
    string                           db_name = 1;
    string                        space_name = 2;
    optional string                 trace_id = 3;
    repeated string                      _id = 4;
}

message SearchResponse {
    int32                              code = 1;
    string                              msg = 2;
    repeated common_rpc.Document  documents = 3;
}
// --------------------------------------

message DeleteSpaceRequest {
    optional string                 db_name = 1;
    optional string              space_name = 2;
}

message DeleteSpaceResponse {
    common_rpc.RespStatus status = 1;
}

// ------------------mock-----------------
message MockDoc {
    optional string     key = 1;
    optional string     val = 2;
    string              msg = 3;
}

message MockUpsertRequest {
    repeated MockDoc           docs         = 1;
    optional int32             key_type     = 2;
    optional string            db_name      = 3;
    optional string            space_name   = 4;

    int32 test_id                      = 5;
}

message MockUpsertResponse {
    optional int32     code     = 1;
    optional string    msg      = 2;
    repeated MockDoc   docs_res = 3;
}

message MockGetRequest {
    repeated string   keys = 1;
    optional int32    key_type = 2;
    optional string db_name = 4;
    optional string space_name = 5;
}

message MockGetResponse {
    optional int32 code             = 1;
    optional string msg             = 2;
    repeated MockDoc   docs = 3;
}
// ---------------------------------------
